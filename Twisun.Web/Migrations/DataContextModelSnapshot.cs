// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Twisun.Web.Data;

namespace Twisun.Web.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Twisun.Web.Data.Entities.Battery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Capacity");

                    b.Property<int>("CarId");

                    b.Property<DateTime>("Created_at");

                    b.Property<float>("OutletLevel");

                    b.Property<float>("SolarLevel");

                    b.Property<float>("StateOfCharge");

                    b.Property<float>("StateOfHealth");

                    b.Property<DateTime>("Updtaed_at");

                    b.HasKey("Id");

                    b.HasIndex("CarId")
                        .IsUnique();

                    b.ToTable("Batteries");
                });

            modelBuilder.Entity("Twisun.Web.Data.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("ChargedBatteries");

                    b.Property<DateTime>("Created_at");

                    b.Property<int>("Model")
                        .HasMaxLength(4);

                    b.Property<string>("Plaque")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<float>("SolarKm");

                    b.Property<float>("TotalKm");

                    b.Property<DateTime>("Updtaed_at");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("Twisun.Web.Data.Entities.DailySolarEnergy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created_at");

                    b.Property<int>("SolarPanelId");

                    b.Property<float>("Value");

                    b.HasKey("Id");

                    b.HasIndex("SolarPanelId");

                    b.ToTable("DailySolarEnergies");
                });

            modelBuilder.Entity("Twisun.Web.Data.Entities.Range", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarId");

                    b.Property<DateTime>("Created_at");

                    b.Property<float>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("Ranges");
                });

            modelBuilder.Entity("Twisun.Web.Data.Entities.SolarPanel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarId");

                    b.Property<DateTime>("Created_at");

                    b.Property<string>("Serial");

                    b.Property<DateTime>("Updtaed_at");

                    b.HasKey("Id");

                    b.HasIndex("CarId")
                        .IsUnique();

                    b.ToTable("SolarPanels");
                });

            modelBuilder.Entity("Twisun.Web.Data.Entities.Battery", b =>
                {
                    b.HasOne("Twisun.Web.Data.Entities.Car", "Car")
                        .WithOne("Battery")
                        .HasForeignKey("Twisun.Web.Data.Entities.Battery", "CarId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Twisun.Web.Data.Entities.DailySolarEnergy", b =>
                {
                    b.HasOne("Twisun.Web.Data.Entities.SolarPanel", "SolarPanel")
                        .WithMany("DailySolarEnergies")
                        .HasForeignKey("SolarPanelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Twisun.Web.Data.Entities.Range", b =>
                {
                    b.HasOne("Twisun.Web.Data.Entities.Car", "Car")
                        .WithMany("Ranges")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Twisun.Web.Data.Entities.SolarPanel", b =>
                {
                    b.HasOne("Twisun.Web.Data.Entities.Car", "Car")
                        .WithOne("SolarPanel")
                        .HasForeignKey("Twisun.Web.Data.Entities.SolarPanel", "CarId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
